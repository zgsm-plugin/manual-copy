<svg width="200" height="200" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
  <!--
    定义渐变色，以便后续的形状可以复用它们。
    这是 SVG 的一个标准做法，能让代码更清晰。
  -->
  <defs>
    <!-- 蓝色渐变：从上方的亮蓝色到下方的深蓝色 -->
    <linearGradient id="blueGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#3B9EFF; stop-opacity:1" />
      <stop offset="100%" style="stop-color:#0052D4; stop-opacity:1" />
    </linearGradient>

    <!-- 绿色渐变：从左上方的亮绿色到右下方的青色 -->
    <linearGradient id="greenGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#29E79F; stop-opacity:1" />
      <stop offset="100%" style="stop-color:#00C7B4; stop-opacity:1" />
    </linearGradient>
  </defs>

  <!--
    第一步：绘制蓝色的C形圆环。
    这是最复杂的部分，我们使用一个 <path> 元素来精确绘制这个形状。
    - M (Move To): 移动画笔到起点
    - A (Arc): 绘制外圈的弧线
    - L (Line To): 绘制末端的直线
    - A (Arc): 绘制内圈的弧线
    - Z (ClosePath): 闭合路径
    我们给它应用上面定义的蓝色渐变。
  -->
  <g transform="rotate(-90, 50, 50)">
    <path
      fill="url(#blueGradient)"
      d="M 85.35,24.64
         A 45,45 0 1 1 24.64,85.35
         L 35.25,74.74
         A 30,30 0 1 0 74.74,35.25
         Z"
    />
  </g>

  <!--
    第二步：绘制绿色的、旋转的矩形。
    - 我们先在某个位置创建一个矩形。
    - 然后使用 transform="rotate(角度, 旋转中心x, 旋转中心y)" 属性来旋转它。
    - 最后，给它应用上面定义的绿色渐变。
    因为这个矩形在代码中位于蓝色路径之后，所以它会渲染在蓝色路径的上方。
  -->
  <rect
    x="18"
    y="48"
    width="45"
    height="20"
    rx="3"
    ry="3"
    fill="url(#greenGradient)"
    transform="rotate(-45, 40.5, 58)"
  />

</svg>